//
// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Warning: This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using AutoMapper;
using FROM = Microsoft.Azure.Management.Compute.Models;
using TO = Microsoft.Azure.Commands.Compute.Automation.Models;

namespace Microsoft.Azure.Commands.Compute.Automation.Models
{
    public class ComputeAutomationAutoMapperProfile : Profile
    {
        private static IMapper _mapper = null;

        private static readonly object _lock = new object();

        public static IMapper Mapper
        {
            get
            {
                lock(_lock)
                {
                    if (_mapper == null)
                    {
                        Initialize();
                    }

                    return _mapper;
                }
            }
        }

        public override string ProfileName
        {
            get { return "ComputeAutomationAutoMapperProfile"; }
        }

        private static void Initialize()
        {
            var config = new MapperConfiguration(cfg =>
            {
                cfg.CreateMap<FROM.AvailabilitySet, PSAvailabilitySetList>();
                cfg.CreateMap<PSAvailabilitySetList, PSAvailabilitySet>();
                cfg.CreateMap<PSAvailabilitySet, PSAvailabilitySetList>();
                cfg.CreateMap<FROM.ContainerService, PSContainerServiceList>();
                cfg.CreateMap<PSContainerServiceList, PSContainerService>();
                cfg.CreateMap<PSContainerService, PSContainerServiceList>();
                cfg.CreateMap<FROM.Disk, PSDiskList>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<PSDiskList, PSDisk>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<PSDisk, PSDiskList>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<FROM.Image, PSImageList>();
                cfg.CreateMap<PSImageList, PSImage>();
                cfg.CreateMap<PSImage, PSImageList>();
                cfg.CreateMap<FROM.Snapshot, PSSnapshotList>();
                cfg.CreateMap<PSSnapshotList, PSSnapshot>();
                cfg.CreateMap<PSSnapshot, PSSnapshotList>();
                cfg.CreateMap<FROM.VirtualMachineScaleSet, PSVirtualMachineScaleSetList>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<PSVirtualMachineScaleSetList, PSVirtualMachineScaleSet>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<PSVirtualMachineScaleSet, PSVirtualMachineScaleSetList>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<FROM.VirtualMachineScaleSet, PSVirtualMachineScaleSetList>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<PSVirtualMachineScaleSetList, PSVirtualMachineScaleSet>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<PSVirtualMachineScaleSet, PSVirtualMachineScaleSetList>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<FROM.VirtualMachineScaleSetVM, PSVirtualMachineScaleSetVMList>();
                cfg.CreateMap<PSVirtualMachineScaleSetVMList, PSVirtualMachineScaleSetVM>();
                cfg.CreateMap<PSVirtualMachineScaleSetVM, PSVirtualMachineScaleSetVMList>();
                cfg.CreateMap<FROM.VirtualMachine, PSVirtualMachineList>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<PSVirtualMachineList, PSVirtualMachine>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<PSVirtualMachine, PSVirtualMachineList>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<FROM.VirtualMachine, PSVirtualMachineList>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<PSVirtualMachineList, PSVirtualMachine>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<PSVirtualMachine, PSVirtualMachineList>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<FROM.Disk, FROM.DiskUpdate>();
                cfg.CreateMap<FROM.DiskUpdate, FROM.Disk>();
                cfg.CreateMap<FROM.DiskUpdate, PSDiskUpdate>();
                cfg.CreateMap<PSDiskUpdate, FROM.DiskUpdate>();
                cfg.CreateMap<FROM.Snapshot, FROM.SnapshotUpdate>();
                cfg.CreateMap<FROM.SnapshotUpdate, FROM.Snapshot>();
                cfg.CreateMap<FROM.SnapshotUpdate, PSSnapshotUpdate>();
                cfg.CreateMap<PSSnapshotUpdate, FROM.SnapshotUpdate>();
                cfg.CreateMap<FROM.AvailabilitySet, PSAvailabilitySet>();
                cfg.CreateMap<PSAvailabilitySet, FROM.AvailabilitySet>();
                cfg.CreateMap<FROM.OperationStatusResponse, PSOperationStatusResponse>();
                cfg.CreateMap<PSOperationStatusResponse, FROM.OperationStatusResponse>();
                cfg.CreateMap<FROM.VirtualMachineSize, PSVirtualMachineSize>();
                cfg.CreateMap<PSVirtualMachineSize, FROM.VirtualMachineSize>();
                cfg.CreateMap<FROM.ContainerService, PSContainerService>();
                cfg.CreateMap<PSContainerService, FROM.ContainerService>();
                cfg.CreateMap<FROM.Disk, PSDisk>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<PSDisk, FROM.Disk>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<FROM.AccessUri, PSAccessUri>();
                cfg.CreateMap<PSAccessUri, FROM.AccessUri>();
                cfg.CreateMap<FROM.Image, PSImage>();
                cfg.CreateMap<PSImage, FROM.Image>();
                cfg.CreateMap<FROM.LogAnalyticsOperationResult, PSLogAnalyticsOperationResult>();
                cfg.CreateMap<PSLogAnalyticsOperationResult, FROM.LogAnalyticsOperationResult>();
                cfg.CreateMap<FROM.ResourceSku, PSResourceSku>();
                cfg.CreateMap<PSResourceSku, FROM.ResourceSku>();
                cfg.CreateMap<FROM.Snapshot, PSSnapshot>();
                cfg.CreateMap<PSSnapshot, FROM.Snapshot>();
                cfg.CreateMap<FROM.RunCommandDocument, PSRunCommandDocument>();
                cfg.CreateMap<PSRunCommandDocument, FROM.RunCommandDocument>();
                cfg.CreateMap<FROM.RunCommandDocumentBase, PSRunCommandDocumentBase>();
                cfg.CreateMap<PSRunCommandDocumentBase, FROM.RunCommandDocumentBase>();
                cfg.CreateMap<FROM.RollingUpgradeStatusInfo, PSRollingUpgradeStatusInfo>();
                cfg.CreateMap<PSRollingUpgradeStatusInfo, FROM.RollingUpgradeStatusInfo>();
                cfg.CreateMap<FROM.VirtualMachineScaleSet, PSVirtualMachineScaleSet>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<PSVirtualMachineScaleSet, FROM.VirtualMachineScaleSet>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<FROM.RecoveryWalkResponse, PSRecoveryWalkResponse>();
                cfg.CreateMap<PSRecoveryWalkResponse, FROM.RecoveryWalkResponse>();
                cfg.CreateMap<FROM.VirtualMachineScaleSetInstanceView, PSVirtualMachineScaleSetInstanceView>();
                cfg.CreateMap<PSVirtualMachineScaleSetInstanceView, FROM.VirtualMachineScaleSetInstanceView>();
                cfg.CreateMap<FROM.VirtualMachineScaleSetSku, PSVirtualMachineScaleSetSku>();
                cfg.CreateMap<PSVirtualMachineScaleSetSku, FROM.VirtualMachineScaleSetSku>();
                cfg.CreateMap<FROM.VirtualMachineScaleSetVM, PSVirtualMachineScaleSetVM>();
                cfg.CreateMap<PSVirtualMachineScaleSetVM, FROM.VirtualMachineScaleSetVM>();
                cfg.CreateMap<FROM.VirtualMachineScaleSetVMInstanceView, PSVirtualMachineScaleSetVMInstanceView>();
                cfg.CreateMap<PSVirtualMachineScaleSetVMInstanceView, FROM.VirtualMachineScaleSetVMInstanceView>();
                cfg.CreateMap<FROM.VirtualMachineCaptureResult, PSVirtualMachineCaptureResult>();
                cfg.CreateMap<PSVirtualMachineCaptureResult, FROM.VirtualMachineCaptureResult>();
                cfg.CreateMap<FROM.VirtualMachine, PSVirtualMachine>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<PSVirtualMachine, FROM.VirtualMachine>()
                    .ForMember(c => c.Zones, o => o.Condition(r => r.Zones != null));
                cfg.CreateMap<FROM.VirtualMachineInstanceView, PSVirtualMachineInstanceView>();
                cfg.CreateMap<PSVirtualMachineInstanceView, FROM.VirtualMachineInstanceView>();
                cfg.CreateMap<FROM.RunCommandResult, PSRunCommandResult>();
                cfg.CreateMap<PSRunCommandResult, FROM.RunCommandResult>();

            });
            _mapper = config.CreateMapper();
        }
    }
}
