//
// Copyright (c) Microsoft and contributors.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Warning: This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using Microsoft.Azure.Commands.Compute.Automation.Models;
using Microsoft.Azure.Commands.Compute.Common;
using Microsoft.Azure.Commands.Compute.Models;
using Microsoft.Azure.Commands.ResourceManager.Common.ArgumentCompleters;
using Microsoft.Azure.Management.Compute.Models;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation;

namespace Microsoft.Azure.Commands.Compute.Automation
{
    [Cmdlet("Set", "AzureRmVmssStorageProfile", SupportsShouldProcess = true)]
    [OutputType(typeof(PSVirtualMachineScaleSet))]
    public partial class SetAzureRmVmssStorageProfileCommand : ResourceManager.Common.AzureRMCmdlet
    {
        [Parameter(
            Mandatory = true,
            Position = 0,
            ValueFromPipeline = true,
            ValueFromPipelineByPropertyName = true)]
        public PSVirtualMachineScaleSet VirtualMachineScaleSet { get; set; }

        [Parameter(
            Mandatory = false,
            Position = 1,
            ValueFromPipelineByPropertyName = true)]
        public string ImageReferencePublisher { get; set; }

        [Parameter(
            Mandatory = false,
            Position = 2,
            ValueFromPipelineByPropertyName = true)]
        public string ImageReferenceOffer { get; set; }

        [Parameter(
            Mandatory = false,
            Position = 3,
            ValueFromPipelineByPropertyName = true)]
        public string ImageReferenceSku { get; set; }

        [Parameter(
            Mandatory = false,
            Position = 4,
            ValueFromPipelineByPropertyName = true)]
        public string ImageReferenceVersion { get; set; }

        [Parameter(
            Mandatory = false,
            Position = 5,
            ValueFromPipelineByPropertyName = true)]
        [Alias("Name")]
        public string OsDiskName { get; set; }

        [Parameter(
            Mandatory = false,
            Position = 6,
            ValueFromPipelineByPropertyName = true)]
        public CachingTypes? OsDiskCaching { get; set; }

        [Parameter(
            Mandatory = false,
            Position = 7,
            ValueFromPipelineByPropertyName = true)]
        public string OsDiskCreateOption { get; set; }

        [Parameter(
            Mandatory = false,
            Position = 8,
            ValueFromPipelineByPropertyName = true)]
        public OperatingSystemTypes? OsDiskOsType { get; set; }

        [Parameter(
            Mandatory = false,
            Position = 9,
            ValueFromPipelineByPropertyName = true)]
        public string Image { get; set; }

        [Parameter(
            Mandatory = false,
            Position = 10,
            ValueFromPipelineByPropertyName = true)]
        public string[] VhdContainer { get; set; }

        [Parameter(
            Mandatory = false,
            ValueFromPipelineByPropertyName = true)]
        public string ImageReferenceId { get; set; }

        [Parameter(
            Mandatory = false)]
        public SwitchParameter OsDiskWriteAccelerator { get; set; }

        [Parameter(
            Mandatory = false,
            ValueFromPipelineByPropertyName = true)]
        [PSArgumentCompleter("Standard_LRS", "Premium_LRS")]
        public string ManagedDisk { get; set; }

        [Parameter(
            Mandatory = false,
            ValueFromPipelineByPropertyName = true)]
        public VirtualMachineScaleSetDataDisk[] DataDisk { get; set; }

        protected override void ProcessRecord()
        {
            if (ShouldProcess("VirtualMachineScaleSet", "Set"))
            {
                Run();
            }
        }

        private void Run()
        {
            if (MyInvocation.BoundParameters.ContainsKey("ImageReferencePublisher"))
            {
                // VirtualMachineProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile = new VirtualMachineScaleSetVMProfile();
                }
                // StorageProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile = new VirtualMachineScaleSetStorageProfile();
                }
                // ImageReference
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference = new ImageReference();
                }
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference.Publisher = ImageReferencePublisher;
            }

            if (MyInvocation.BoundParameters.ContainsKey("ImageReferenceOffer"))
            {
                // VirtualMachineProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile = new VirtualMachineScaleSetVMProfile();
                }
                // StorageProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile = new VirtualMachineScaleSetStorageProfile();
                }
                // ImageReference
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference = new ImageReference();
                }
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference.Offer = ImageReferenceOffer;
            }

            if (MyInvocation.BoundParameters.ContainsKey("ImageReferenceSku"))
            {
                // VirtualMachineProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile = new VirtualMachineScaleSetVMProfile();
                }
                // StorageProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile = new VirtualMachineScaleSetStorageProfile();
                }
                // ImageReference
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference = new ImageReference();
                }
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference.Sku = ImageReferenceSku;
            }

            if (MyInvocation.BoundParameters.ContainsKey("ImageReferenceVersion"))
            {
                // VirtualMachineProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile = new VirtualMachineScaleSetVMProfile();
                }
                // StorageProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile = new VirtualMachineScaleSetStorageProfile();
                }
                // ImageReference
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference = new ImageReference();
                }
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference.Version = ImageReferenceVersion;
            }

            if (MyInvocation.BoundParameters.ContainsKey("ImageReferenceId"))
            {
                // VirtualMachineProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile = new VirtualMachineScaleSetVMProfile();
                }
                // StorageProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile = new VirtualMachineScaleSetStorageProfile();
                }
                // ImageReference
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference = new ImageReference();
                }
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.ImageReference.Id = ImageReferenceId;
            }

            if (MyInvocation.BoundParameters.ContainsKey("OsDiskName"))
            {
                // VirtualMachineProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile = new VirtualMachineScaleSetVMProfile();
                }
                // StorageProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile = new VirtualMachineScaleSetStorageProfile();
                }
                // OsDisk
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk = new VirtualMachineScaleSetOSDisk();
                }
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk.Name = OsDiskName;
            }

            if (MyInvocation.BoundParameters.ContainsKey("OsDiskCaching"))
            {
                // VirtualMachineProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile = new VirtualMachineScaleSetVMProfile();
                }
                // StorageProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile = new VirtualMachineScaleSetStorageProfile();
                }
                // OsDisk
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk = new VirtualMachineScaleSetOSDisk();
                }
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk.Caching = OsDiskCaching;
            }

            // VirtualMachineProfile
            if (VirtualMachineScaleSet.VirtualMachineProfile == null)
            {
                VirtualMachineScaleSet.VirtualMachineProfile = new VirtualMachineScaleSetVMProfile();
            }
            // StorageProfile
            if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile == null)
            {
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile = new VirtualMachineScaleSetStorageProfile();
            }
            // OsDisk
            if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk == null)
            {
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk = new VirtualMachineScaleSetOSDisk();
            }
            VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk.WriteAcceleratorEnabled = OsDiskWriteAccelerator.IsPresent;

            if (MyInvocation.BoundParameters.ContainsKey("OsDiskCreateOption"))
            {
                // VirtualMachineProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile = new VirtualMachineScaleSetVMProfile();
                }
                // StorageProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile = new VirtualMachineScaleSetStorageProfile();
                }
                // OsDisk
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk = new VirtualMachineScaleSetOSDisk();
                }
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk.CreateOption = OsDiskCreateOption;
            }

            if (MyInvocation.BoundParameters.ContainsKey("OsDiskOsType"))
            {
                // VirtualMachineProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile = new VirtualMachineScaleSetVMProfile();
                }
                // StorageProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile = new VirtualMachineScaleSetStorageProfile();
                }
                // OsDisk
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk = new VirtualMachineScaleSetOSDisk();
                }
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk.OsType = OsDiskOsType;
            }

            if (MyInvocation.BoundParameters.ContainsKey("Image"))
            {
                // VirtualMachineProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile = new VirtualMachineScaleSetVMProfile();
                }
                // StorageProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile = new VirtualMachineScaleSetStorageProfile();
                }
                // OsDisk
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk = new VirtualMachineScaleSetOSDisk();
                }
                // Image
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk.Image == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk.Image = new VirtualHardDisk();
                }
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk.Image.Uri = Image;
            }

            if (MyInvocation.BoundParameters.ContainsKey("VhdContainer"))
            {
                // VirtualMachineProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile = new VirtualMachineScaleSetVMProfile();
                }
                // StorageProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile = new VirtualMachineScaleSetStorageProfile();
                }
                // OsDisk
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk = new VirtualMachineScaleSetOSDisk();
                }
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk.VhdContainers = VhdContainer;
            }

            if (MyInvocation.BoundParameters.ContainsKey("ManagedDisk"))
            {
                // VirtualMachineProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile = new VirtualMachineScaleSetVMProfile();
                }
                // StorageProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile = new VirtualMachineScaleSetStorageProfile();
                }
                // OsDisk
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk = new VirtualMachineScaleSetOSDisk();
                }
                // ManagedDisk
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk.ManagedDisk == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk.ManagedDisk = new VirtualMachineScaleSetManagedDiskParameters();
                }
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.OsDisk.ManagedDisk.StorageAccountType = ManagedDisk;
            }

            if (MyInvocation.BoundParameters.ContainsKey("DataDisk"))
            {
                // VirtualMachineProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile = new VirtualMachineScaleSetVMProfile();
                }
                // StorageProfile
                if (VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile == null)
                {
                    VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile = new VirtualMachineScaleSetStorageProfile();
                }
                VirtualMachineScaleSet.VirtualMachineProfile.StorageProfile.DataDisks = DataDisk;
            }

            WriteObject(VirtualMachineScaleSet);
        }
    }
}

