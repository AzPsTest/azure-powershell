// -----------------------------------------------------------------------------
﻿//
﻿// Copyright Microsoft Corporation
﻿// Licensed under the Apache License, Version 2.0 (the "License");
﻿// you may not use this file except in compliance with the License.
﻿// You may obtain a copy of the License at
﻿// http://www.apache.org/licenses/LICENSE-2.0
﻿// Unless required by applicable law or agreed to in writing, software
﻿// distributed under the License is distributed on an "AS IS" BASIS,
﻿// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
﻿// See the License for the specific language governing permissions and
﻿// limitations under the License.
﻿// -----------------------------------------------------------------------------
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Azure.Commands.Batch.Models
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using Azure.Batch;
    
    
    public partial class PSJobReleaseTaskExecutionInformation
    {
        
        internal JobReleaseTaskExecutionInformation omObject;
        
        private PSTaskContainerExecutionInformation containerInformation;
        
        private PSTaskFailureInformation failureInformation;
        
        internal PSJobReleaseTaskExecutionInformation(JobReleaseTaskExecutionInformation omObject)
        {
            if (omObject == null)
            {
                throw new ArgumentNullException("omObject");
            }
            this.omObject = omObject;
        }
        
        public PSTaskContainerExecutionInformation ContainerInformation
        {
            get
            {
                if (containerInformation == null 
                    && omObject.ContainerInformation != null)
                {
                    containerInformation = new PSTaskContainerExecutionInformation(omObject.ContainerInformation);
                }
                return containerInformation;
            }
        }
        
        public DateTime? EndTime
        {
            get
            {
                return omObject.EndTime;
            }
        }
        
        public Int32? ExitCode
        {
            get
            {
                return omObject.ExitCode;
            }
        }
        
        public PSTaskFailureInformation FailureInformation
        {
            get
            {
                if (failureInformation == null 
                    && omObject.FailureInformation != null)
                {
                    failureInformation = new PSTaskFailureInformation(omObject.FailureInformation);
                }
                return failureInformation;
            }
        }
        
        public Azure.Batch.Common.TaskExecutionResult? Result
        {
            get
            {
                return omObject.Result;
            }
        }
        
        public DateTime StartTime
        {
            get
            {
                return omObject.StartTime;
            }
        }
        
        public Azure.Batch.Common.JobReleaseTaskState State
        {
            get
            {
                return omObject.State;
            }
        }
        
        public string TaskRootDirectory
        {
            get
            {
                return omObject.TaskRootDirectory;
            }
        }
        
        public string TaskRootDirectoryUrl
        {
            get
            {
                return omObject.TaskRootDirectoryUrl;
            }
        }
    }
}
