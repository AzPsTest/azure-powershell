// -----------------------------------------------------------------------------
﻿//
﻿// Copyright Microsoft Corporation
﻿// Licensed under the Apache License, Version 2.0 (the "License");
﻿// you may not use this file except in compliance with the License.
﻿// You may obtain a copy of the License at
﻿// http://www.apache.org/licenses/LICENSE-2.0
﻿// Unless required by applicable law or agreed to in writing, software
﻿// distributed under the License is distributed on an "AS IS" BASIS,
﻿// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
﻿// See the License for the specific language governing permissions and
﻿// limitations under the License.
﻿// -----------------------------------------------------------------------------
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Azure.Commands.Batch.Models
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using Azure.Batch;
    
    
    public partial class PSContainerConfiguration
    {
        
        internal ContainerConfiguration omObject;
        
        private IList<String> containerImageNames;
        
        private IList<PSContainerRegistry> containerRegistries;
        
        public PSContainerConfiguration()
        {
            omObject = new ContainerConfiguration();
        }
        
        internal PSContainerConfiguration(ContainerConfiguration omObject)
        {
            if (omObject == null)
            {
                throw new ArgumentNullException("omObject");
            }
            this.omObject = omObject;
        }
        
        public IList<String> ContainerImageNames
        {
            get
            {
                if (containerImageNames == null 
                    && omObject.ContainerImageNames != null)
                {
                    List<String> list;
                    list = new List<String>();
                    IEnumerator<String> enumerator;
                    enumerator = omObject.ContainerImageNames.GetEnumerator();
                    for (
                    ; enumerator.MoveNext(); 
                    )
                    {
                        list.Add(enumerator.Current);
                    }
                    containerImageNames = list;
                }
                return containerImageNames;
            }
            set
            {
                if (value == null)
                {
                    omObject.ContainerImageNames = null;
                }
                else
                {
                    omObject.ContainerImageNames = new List<String>();
                }
                containerImageNames = value;
            }
        }
        
        public IList<PSContainerRegistry> ContainerRegistries
        {
            get
            {
                if (containerRegistries == null 
                    && omObject.ContainerRegistries != null)
                {
                    List<PSContainerRegistry> list;
                    list = new List<PSContainerRegistry>();
                    IEnumerator<ContainerRegistry> enumerator;
                    enumerator = omObject.ContainerRegistries.GetEnumerator();
                    for (
                    ; enumerator.MoveNext(); 
                    )
                    {
                        list.Add(new PSContainerRegistry(enumerator.Current));
                    }
                    containerRegistries = list;
                }
                return containerRegistries;
            }
            set
            {
                if (value == null)
                {
                    omObject.ContainerRegistries = null;
                }
                else
                {
                    omObject.ContainerRegistries = new List<ContainerRegistry>();
                }
                containerRegistries = value;
            }
        }
    }
}
